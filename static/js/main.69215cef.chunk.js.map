{"version":3,"sources":["img/logo-enlightme-1.png","img/enlightme-process.png","translations.js","components/NavBar.js","components/ServiceCard.js","components/Footer.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","locale","english","What","Subtext","citation80pp","services","learnmore","openvalues","ecosystem","ecosystemdescription","arabic","useStyles","makeStyles","theme","offset","mixins","toolbar","grow","flexGrow","title","display","breakpoints","up","sectionDesktop","sectionMobile","NavBar","languageMode","handleLanguageToggle","classes","React","useState","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","Boolean","LanguageSwitch","FormGroup","row","style","marginRight","FormControlLabel","control","Switch","checked","onChange","value","color","inputProps","label","labelPlacement","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","IconButton","aria-label","className","AppBar","position","background","boxShadow","Toolbar","to","src","Logo","maxHeight","height","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","root","maxWidth","media","ServiceCard","props","Grid","item","xs","md","textAlign","padding","Card","CardMedia","image","service","CardContent","Typography","gutterBottom","variant","component","description","CardActions","size","Footer","container","spacing","alt","href","paddingTop","alignItems","paper","palette","text","secondary","Home","t","useTranslate","paragraph","ImageProcess","width","map","key","App","setLanguageMode","translations","path","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.69215cef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-enlightme-1.bc9272d6.png\";","module.exports = __webpack_public_path__ + \"static/media/enlightme-process.74d875c1.png\";","export default {\n    locale: \"en\",\n    english: {\n      What: \"Location Empowered Insights\",\n      Subtext: \"Location intelligence is the ability to analyze and find spatial patterns in data, to provide powerful insights into understanding our world and communicating our needs.\",\n      citation80pp:\"80% of data has a location component\",\n      services:\"Value proposition\",\n      learnmore: \"LEARN MORE >>>>\",\n      openvalues:\"Building community driven Open Platforms, Geospatial datasets and their Use cases\",\n      ecosystem: \"Ecosystem\",\n      ecosystemdescription:\"At Enlight.me we develop community driven geospatial platforms to democratize access to open datasets and build useful use cases for Business\",\n    \n    },\n    arabic: {\n      What: \"اﻹستشراف المموقع\",\n      Subtext: \"الذكاء الجغرافي يمثل القدرة على التحليل والبحث عن العلاقات الفضائية المتواجدة بين البيانات، من أجل نظرة إستشرافية ثاقبة تساعدنا على فهم عالمنا و توضيح مبتغانا\",\n      citation80pp:\"ثمانين بالمائة (80%) من البيانات لها بعد جغرافي\",\n      services:\"الخدمات المقترحة\",\n      learnmore: \"<<<< معرفة المزيد\",      \n      openvalues:\"لننشئ معاً منصاتنا الرقمية المفتوحة و قواعد بياناتنا و سيناريوهات إستعمالها\",\n      ecosystem: \"المنظومة المتكاملة\",\n      ecosystemdescription:\" هدفنا هو التطوير الجماعي لمنصات رقمية لتعميم إستعمال البيانات الجغرافية المفتوحة و تحضير سيناريوهات للإستفادة منها في إدارة اﻷعمال\",\n    }\n  };\n  ","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Switch from \"@material-ui/core/Switch\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport HomeIcon from '@material-ui/icons/Home';\nimport InfoIcon from '@material-ui/icons/Info';\nimport PermContactCalendarIcon from '@material-ui/icons/PermContactCalendar';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Logo from \"../img/logo-enlightme-1.png\";\n\nconst useStyles = makeStyles(theme => ({\n    offset: theme.mixins.toolbar,\n    grow: {\n        flexGrow: 1\n    },\n    title: {\n        display: \"flex\",\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"block\"\n        }\n    },\n    sectionDesktop: {\n        display: \"none\",\n        [theme.breakpoints.up(\"md\")]: {\n            display: \"flex\"\n        }\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\n\nconst NavBar = ({ languageMode, handleLanguageToggle }) => {\n    const classes = useStyles();\n\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const LanguageSwitch = () => {\n        return (\n            <FormGroup row style={{ marginRight: \"40px\" }}>\n            <FormControlLabel\n                control={\n                    <Switch\n                        checked={languageMode}\n                        onChange={() => handleLanguageToggle()}\n                        value=\"checkedB\"\n                        color=\"primary\"\n                        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                    />\n                }\n                label={languageMode ? \"Arabic\" : \"English\"}\n                labelPlacement=\"start\"\n            />\n        </FormGroup>\n\n        );\n    }\n\n    /**\n     * Functions for Mobile menu \n     */\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n      };\n    \n      const handleMobileMenuOpen = event => {\n        setMobileMoreAnchorEl(event.currentTarget);\n      };\n\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <LanguageSwitch/>\n            </MenuItem>\n            <MenuItem>\n                <IconButton aria-label=\"Home\" color=\"inherit\">                    \n                        <HomeIcon />\n                </IconButton>\n                <p>Home</p>\n            </MenuItem>\n            <MenuItem>\n                <IconButton aria-label=\"About\" color=\"inherit\">\n                    <InfoIcon />\n                </IconButton>\n                <p>About</p>\n            </MenuItem>\n            <MenuItem>\n                <IconButton aria-label=\"Contact\" color=\"inherit\">\n                    <PermContactCalendarIcon />\n                </IconButton>\n                <p>Contact</p>\n            </MenuItem>         \n            \n        </Menu>\n    );\n\n    /**\n     * Render function \n     */\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"fixed\"\n                style={{\n                    background: \"white\",\n                    boxShadow: \"none\",\n                    color: \"#3F3D4B\"\n                }}>\n                <Toolbar>\n                    <Link to='/'>\n                        <img src={Logo} style={{ maxHeight: '80%', height: '50px' }} />\n                    </Link>\n\n                    <div className={classes.grow} />\n\n                    <div className={classes.sectionDesktop}>\n                        <LanguageSwitch/>\n                        <Button color=\"inherit\">Home</Button>\n                        <Button color=\"inherit\">About</Button>\n                        <Button color=\"inherit\">Contact</Button>\n                    </div>\n\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n\n            </AppBar>\n            {renderMobileMenu}\n            <div className={classes.offset} />\n        </div>\n\n    );\n}\nexport default NavBar;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 400,\n    },\n    media: {\n      height: 140,\n    },\n  });\n\nconst ServiceCard = (props) => {\n    const classes = useStyles();\n    return (\n        <Grid\n            item\n            xs={12}\n            md={4}\n            style={{ textAlign: \"center\", padding: \"2rem\" }}\n        >\n            <Card className={classes.root}>\n                <CardMedia \n                    className={classes.media}\n                    image={props.service.image}\n                    title={props.service.title}\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"caption\" component=\"h1\">\n                        {props.service.title}\n                    </Typography>\n                    <Typography component=\"p\">\n                        {props.service.description}\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <Button size=\"small\" color=\"primary\">\n                        More details\n                        </Button>\n                </CardActions>\n            </Card>\n        </Grid>\n    );\n}\n\nexport default ServiceCard;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport InstagramIcon from '@material-ui/icons/Instagram';\n\n\nimport Logo from '../img/logo-enlightme-1.png';\n\nconst Footer = () => {\n    return (\n        <footer className='footer'>\n            <Grid container spacing={3} >\n                <Grid item xs={12} md={4} style={{ textAlign: 'center', padding: '2rem' }}>\n                    <img src={Logo} style={{ maxHeight: '100%', height: '100px' }} alt=\"\"/>\n                </Grid>\n                <Grid item xs={12} md={4} style={{ textAlign: 'center', padding: '2rem' }}>\n                    <Link to='/'  color=\"inherit\" >About</Link>\n                    <br/>\n                    <br/>\n                    <Link to='/'>Contact us</Link>\n                    <br/>\n                    <br/>\n                    <Link to='/'>Team & Community</Link>\n                </Grid>\n                <Grid item xs={12} md={4} style={{ textAlign: 'center', padding: '2rem' }}>\n                    <a href='https://www.github.com/enlight-me'>\n                    <IconButton aria-label=\"Facebook\" color=\"inherit\">\n                            <GitHubIcon color=\"action\"/>\n                        </IconButton>\n                    </a>\n                    <br/>                    \n                    <br/>                    \n                    <Link to='/'>\n                        <IconButton aria-label=\"Facebook\" color=\"inherit\">\n                            <FacebookIcon color=\"action\"/>\n                        </IconButton>                        \n                    </Link>\n                    <Link to='/'>\n                        <IconButton aria-label=\"Instagram\" color=\"inherit\">\n                            <InstagramIcon color=\"action\" />\n                        </IconButton>\n                    </Link>\n                    <Link to='/'>\n                    <IconButton aria-label=\"LinkedIn\" color=\"inherit\">\n                            <LinkedInIcon color=\"action\"/>\n                        </IconButton>\n                    </Link>\n                    <Link to='/'>\n                    <IconButton aria-label=\"Twitter\" color=\"inherit\">\n                            <TwitterIcon color=\"action\"/>\n                        </IconButton>\n                    </Link>\n                </Grid>\n                <Grid item xs={12} md={12} style={{ textAlign: 'center', padding: '0.5rem' , paddingTop: '0.1rem'}}>\n                    <p>© 2020, Built with ❤ by Team Enlight.me</p>\n                </Grid>\n            </Grid>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React, { Fragment } from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useTranslate } from \"react-translate\";\n\nimport NavBar from '../components/NavBar.js';\nimport ServiceCard from '../components/ServiceCard.js';\nimport Footer from '../components/Footer.js';\n\nimport ImageProcess from '../img/enlightme-process.png';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    alignItems: \"center\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nconst Home = ({ languageMode, handleLanguageToggle }) => {\n\n  const proServices = [{ title: 'Blockchain', description: 'Blockchain Based Solutions', image: \"/static/images/blockchain-logo.jpg\" },\n  { title: 'GIS', description: 'Geographical Informations Systems (GIS)', image: \"/static/images/gis.png\" },\n  { title: 'SDS', description: 'Spatial Data Science', image: \"/static/images/gis.png\" }];\n\n  let t = useTranslate(languageMode ? \"english\" : \"arabic\");\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      <div className=\"landingContainer\">\n        <NavBar\n          languageMode={languageMode}\n          handleLanguageToggle={handleLanguageToggle}\n        />\n        <div className={classes.root}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={6}>\n              <div className=\"opening-blurb\">\n                <Typography variant=\"h3\">{t(\"What\")} </Typography>\n                <Button color=\"inherit\" variant=\"contained\">{t(\"learnmore\")}</Button>\n                <hr />\n                <Typography variant=\"h5\">{t(\"Subtext\")}</Typography>\n                <br/>\n              </div>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n\n      <div className=\"blurb\">\n        <Grid container spacing={3}>\n          <Grid\n            item\n            xs={12}\n            md={12}\n            style={{ textAlign: \"center\", padding: \"5rem\" }}\n          >\n            <Typography variant=\"h3\" style={{ color: \"white\" }}> {t(\"citation80pp\")} </Typography>\n          </Grid>\n        </Grid>\n      </div>\n\n      <div className=\"description\">\n        <Grid container spacing={3} alignItems=\"center\">\n          <Grid item xs={12} md={12} style={{ textAlign: \"center\", padding: \"2rem\" }}>\n            <Typography variant=\"h3\">{t(\"ecosystem\")} </Typography>\n          </Grid>\n          <Grid container spacing={3} alignItems=\"center\">\n              <Grid item xs={12} md={6} style={{textAlign: 'center', padding: \"1rem\" }}>\n                <Typography variant=\"h5\" paragraph>\n                  {t(\"ecosystemdescription\")}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}  md={6}>\n                <img src={ImageProcess} style={{ maxHeight: '40vh', width: '100%' }} alt=\"\" /> \n              </Grid>\n\n          </Grid>\n        </Grid>\n      </div>\n\n      <div className=\"blurb\">\n        <Grid container spacing={3}>\n          <Grid\n            item\n            xs={12}\n            md={12}\n            style={{ textAlign: \"center\", padding: \"5rem\" }}\n          >\n            <Typography variant=\"h3\" style={{ color: \"white\" }}> {t(\"openvalues\")} </Typography>\n          </Grid>\n        </Grid>\n      </div>\n\n      <div className=\"howitworks\">\n        <Grid container spacing={3}>\n          <Grid\n            item\n            xs={12}\n            md={12}\n            style={{ textAlign: \"center\", padding: \"2rem\" }}\n          >\n            <Typography variant=\"h3\">{t(\"services\")} </Typography>\n          </Grid>\n\n          {proServices.map(service => (\n            <ServiceCard service={service} key={service.title} />\n          ))}\n\n        </Grid>\n      </div>\n\n      <Footer />\n\n\n    </Fragment>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nimport { TranslatorProvider } from \"react-translate\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport translations from \"./translations\";\nimport Home from './pages/Home.js';\nimport './App.css';\n\nfunction App() {\n\n  const [languageMode, setLanguageMode] = React.useState(true);\n\n  const handleLanguageToggle = () => {\n    setLanguageMode(!languageMode);\n  };\n\n  return (\n    <div className=\"App\">\n\n      <TranslatorProvider translations={translations}>\n        <Router>\n          <div>\n            <Switch>\n              <Route path=\"/\">\n                <Home languageMode={languageMode}\n                  handleLanguageToggle={handleLanguageToggle} />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n\n      </TranslatorProvider>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}